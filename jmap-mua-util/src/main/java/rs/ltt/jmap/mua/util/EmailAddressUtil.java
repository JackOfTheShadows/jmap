/*
 * Copyright 2019 Daniel Gultsch
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package rs.ltt.jmap.mua.util;

import com.google.common.base.Strings;
import com.google.common.collect.Lists;
import java.util.*;
import java.util.regex.Pattern;
import rs.ltt.jmap.common.entity.EmailAddress;

public class EmailAddressUtil {

    // http://www.ex-parrot.com/~pdw/Mail-RFC822-Address.html
    private static final Pattern EMAIL_PATTERN =
            Pattern.compile(
                    "(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:(?:(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
                            + "\\\\]|\\\\.|(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t]))*\"(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
                            + "\\\\]|\\\\.|(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t]))*\"(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*@(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*|(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
                            + "\\\\]|\\\\.|(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t]))*\"(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)*\\<(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:@(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*(?:,@(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*)*:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)?(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
                            + "\\\\]|\\\\.|(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t]))*\"(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
                            + "\\\\]|\\\\.|(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t]))*\"(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*@(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*\\>(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)|(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
                            + "\\\\]|\\\\.|(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t]))*\"(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)*:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:(?:(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
                            + "\\\\]|\\\\.|(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t]))*\"(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
                            + "\\\\]|\\\\.|(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t]))*\"(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*@(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*|(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
                            + "\\\\]|\\\\.|(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t]))*\"(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)*\\<(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:@(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*(?:,@(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*)*:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)?(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
                            + "\\\\]|\\\\.|(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t]))*\"(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
                            + "\\\\]|\\\\.|(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t]))*\"(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*@(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*\\>(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:,\\s*(?:(?:[^()<>@,;:\\\\\".\\[\\]"
                            + " \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
                            + "\\\\]|\\\\.|(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t]))*\"(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
                            + "\\\\]|\\\\.|(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t]))*\"(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*@(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*|(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
                            + "\\\\]|\\\\.|(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t]))*\"(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)*\\<(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:@(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*(?:,@(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*)*:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)?(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
                            + "\\\\]|\\\\.|(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t]))*\"(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r"
                            + "\\\\]|\\\\.|(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t]))*\"(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*@(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*)(?:\\.(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r"
                            + "\\\\]|\\\\.)*\\](?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*\\>(?:(?:\\r"
                            + "\\n"
                            + ")?[ \\t])*))*)?;\\s*)");

    private static final List<String> STOP_WORDS = Arrays.asList("the");

    public static String toString(EmailAddress emailAddress) {
        final String email = emailAddress.getEmail();
        final String name = emailAddress.getName();
        if (Strings.isNullOrEmpty(name)) {
            return email;
        } else {
            return String.format("%s <%s>", name, email);
        }
    }

    public static String toHeaderValue(Collection<EmailAddress> emailAddresses) {
        final StringBuilder builder = new StringBuilder();
        for (EmailAddress emailAddress : emailAddresses) {
            if (Strings.isNullOrEmpty(emailAddress.getName())) {
                builder.append(emailAddress.getEmail());
            } else {
                builder.append(
                        String.format(
                                "\"%s\" <%s>", emailAddress.getName(), emailAddress.getEmail()));
            }
            builder.append(',');
        }
        return builder.toString();
    }

    public static boolean equalCollections(
            final Collection<EmailAddress> a, final Collection<EmailAddress> b) {
        return new HashSet<>(a).equals(new HashSet<>(b));
    }

    public static boolean isValid(final EmailAddress emailAddress) {
        return isValid(emailAddress.getEmail());
    }

    public static boolean isValid(final String email) {
        return EMAIL_PATTERN.matcher(email).matches();
    }

    public static List<EmailAddress> parse(final String userInput) {
        return Lists.transform(
                EmailAddressTokenizer.tokenize(userInput),
                token -> token != null ? token.getEmailAddress() : null);
    }

    public static String shorten(final String input) {
        final String[] parts = removeInvalidShorts(input.split("\\s"));
        if (parts.length == 0) {
            return input;
        } else {
            return parts[0];
        }
    }

    private static String[] removeInvalidShorts(final String[] input) {
        final ArrayList<String> output = new ArrayList<>(input.length);
        for (String part : input) {
            if (isInitial(part)) {
                continue;
            }
            if (isStopWord(part)) {
                continue;
            }
            output.add(part);
        }
        return output.toArray(new String[0]);
    }

    private static boolean isInitial(final String input) {
        return input.length() == 1 || (input.length() == 2 && input.charAt(1) == '.');
    }

    private static boolean isStopWord(final String input) {
        return STOP_WORDS.contains(input.toLowerCase(Locale.US));
    }
}
